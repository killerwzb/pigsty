#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   redis.yml
# Mtime     :   2020-11-22
# Mtime     :   2022-05-01
# Desc      :   init redis instance on pigsty nodes
# Path      :   redis.yml
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
#==============================================================#

################################################################
# Tutorial
################################################################
# How to create redis clusters ?
#
#  init all redis instances on group <cluster>
#   ./redis.yml -l <cluster>    # create redis cluster
#
#  init redis node (package,dir,exporter)
#   ./redis.yml -l 10.10.10.10    # create redis cluster
#
#  init all redis instances specific node
#   ./redis.yml -l 10.10.10.10    # create redis cluster
#
#  init one specific instance 10.10.10.11:6501
#   ./redis.yml -l 10.10.10.11 -e redis_port=6501 -t redis
#
################################################################


#---------------------------------------------------------------
# Init Redis Node
#---------------------------------------------------------------
# install software, create user & dir, launch exporter
- name: Redis Node
  hosts: all
  become: true
  gather_facts: no
  tags: redis-node
  tasks:

    #------------------------------------------------------------------------------
    # Redis Packages
    #------------------------------------------------------------------------------
    - name: Install redis and exporter
      when: not redis_port is defined
      package: name={{ item }} state=present
      with_items: [ redis , redis_exporter ]

    #------------------------------------------------------------------------------
    # Redis User & Directory
    #------------------------------------------------------------------------------
    - name: Create user redis
      tags: [ redis_install_method , redis_user ]
      when: not redis_port is defined
      user: name=redis home=/home/redis generate_ssh_key=yes

    - name: Make sure redis data dir exists
      when: not redis_port is defined
      file: path={{ item }} state=directory owner=redis mode=0700
      with_items:
        - /etc/redis
        - /var/log/redis/
        - /var/run/redis/
        - "{{ redis_fs_main }}/redis"

    #------------------------------------------------------------------------------
    # Setup Redis Exporter
    #------------------------------------------------------------------------------
    - name: Config /etc/default/redis_exporter
      tags: [ redis_exporter, redis_exporter_config ]
      when: not redis_port is defined
      copy:
        dest: /etc/default/redis_exporter
        content: |
          REDIS_EXPORTER_OPTS={{ redis_exporter_options }}
          REDIS_EXPORTER_CONNECTION_TIMEOUT=10s
          REDIS_EXPORTER_WEB_LISTEN_ADDRESS="0.0.0.0:{{ redis_exporter_port }}"
          REDIS_EXPORTER_WEB_TELEMETRY_PATH="{{ exporter_metrics_path }}"
          REDIS_EXPORTER_INCL_SYSTEM_METRICS=true

    - name: Config redis_exporter service unit
      tags: [ redis_exporter, redis_exporter_config ]
      when: not redis_port is defined
      copy:
        dest: /usr/lib/systemd/system/redis_exporter.service
        content: |
          [Unit]
          Description=Prometheus exporter for Redis server metrics.
          Documentation=https://github.com/oliver006/redis_exporter
          After=network.target
          [Service]
          EnvironmentFile=-/etc/default/redis_exporter
          User=prometheus
          ExecStart=/bin/redis_exporter $REDIS_EXPORTER_OPTS
          ExecReload=/bin/kill -HUP $MAINPID
          Restart=on-failure
          RestartSec=5s
          CPUQuota=10%
          MemoryLimit=200M          
          [Install]
          WantedBy=multi-user.target

    - name: Launch redis_exporter systemd service
      when: redis_exporter_enabled|bool and not redis_port is defined
      tags: redis_exporter
      systemd: name=redis_exporter state=restarted enabled=yes daemon_reload=yes
    - name: Wait for redis_exporter online
      when: redis_exporter_enabled|bool and not redis_port is defined
      tags: redis_exporter
      wait_for: host=127.0.0.1 port={{ redis_exporter_port }} state=started  timeout=10


#---------------------------------------------------------------
# launch redis instance on nodes
#---------------------------------------------------------------
- name: Setup Redis Instances
  hosts: all
  become: true
  gather_facts: no
  tags: redis
  tasks:

    - name: Assert redis configured properly
      tags: [ always, redis-id ]
      assert:
        that:
          - redis_cluster is defined and redis_cluster != ''
          - redis_node is defined
          - redis_instances is defined and redis_instances | type_debug == "dict"
        fail_msg: variable `redis_cluster|redis_instances` are required for redis deployment

    - name: Setup redis instance
      tags: redis_ins
      when: redis_port is not defined or (redis_port is defined and item.key|int == redis_port|int)
      include_role:
        name: redis
      vars:
        port: "{{ item.key }}"
        conf: "{{ item.value|default({}) }}"
      with_dict: "{{ redis_instances }}"

    - name: Register redis exporter as prometheus target
      tags: [ redis_register, register_prometheus ]
      delegate_to: '{{ item }}'
      with_items: '{{ groups["meta"] }}'
      become: yes
      copy:
        dest: /etc/prometheus/targets/redis/{{ redis_cluster }}-{{ redis_node }}.yml
        content: |
          # {{ redis_cluster }}-{{ redis_node }} @ {{ inventory_hostname }}
    
          {% for port in redis_instances %}
          - labels: { cls: {{ redis_cluster }}, ins: {{ redis_cluster }}-{{ redis_node }}-{{ port }}, instance: {{ inventory_hostname }}:{{ port }} }
            targets: [ redis://{{ inventory_hostname }}:{{ port }} ]
    
          {% endfor %}


#---------------------------------------------------------------
# join redis instances for cluster (works on -l <clsname> )
#---------------------------------------------------------------
- name: Join redis cluster
  hosts: all
  become: true
  gather_facts: no
  tags: redis-join
  tasks:

    - name: Join redis cluster
      when: redis_mode == 'cluster'
      block:

        - name: Fetch redis cluster memberships
          when: redis_port is not defined
          connection: local
          set_fact:
            redis_cluster_members={{ hostvars| json_query(redis_cluster_members_query) }}
          vars:
            redis_cluster_members_query: "[@.*][0][?redis_cluster=='{{ redis_cluster }}']"

        - name: Render redis cluster join script
          when: redis_port is not defined
          copy:
            dest: /tmp/{{ redis_cluster }}-join.sh
            mode: 0755
            owner: root
            content: |
              #!/bin/bash
              /bin/redis-cli --cluster create --cluster-yes \
              {% for node in redis_cluster_members %}
              {% for port in node.redis_instances %}
                {{ node.inventory_hostname }}:{{ port }} \
              {% endfor %}
              {% endfor %}
                --cluster-replicas {{ redis_cluster_replicas|default(1) }}

        - name: Join redis clusters
          ignore_errors: true
          when: redis_port is not defined
          shell: "/tmp/{{ redis_cluster }}-join.sh"

...
