---
#================================================================#
#                         VARS: REDIS                            #
#================================================================#

#-----------------------------------------------------------------
# REDIS_IDENTITY
#-----------------------------------------------------------------
# redis_cluster: redis-test       # name of this redis cluster @ cluster level
# redis_node: 1                   # redis node identifier, integer sequence @ node level
# redis_instances: {}             # redis instances definition of this redis node @ node level

#-----------------------------------------------------------------
# REDIS_NODE
#-----------------------------------------------------------------
redis_fs_main: /data            # main fs mountpoint for redis data
redis_exporter_enabled: true    # install redis exporter on redis nodes?
redis_exporter_port: 9121       # default port for redis exporter
redis_exporter_options: ''      # default cli args for redis exporter

#-----------------------------------------------------------------
# REDIS_PROVISION
#-----------------------------------------------------------------
redis_safeguard: false          # force redis_clean = abort if true
redis_clean: true               # abort|skip|clean if redis server already exists
redis_rmdata: true              # remove redis data when purging redis server?
redis_mode: standalone          # standalone,cluster,sentinel
redis_conf: redis.conf          # config template path (except sentinel)
redis_bind_address: '0.0.0.0'   # bind address, empty string turns to inventory_hostname
redis_max_memory: 1GB           # max memory used by each redis instance
redis_mem_policy: allkeys-lru   # memory eviction policy
redis_password: ''              # masterauth & requirepass password, disable by empty string
redis_rdb_save: ['1200 1']      # redis rdb save directives, disable with empty list
redis_aof_enabled: false        # redis aof enabled
redis_rename_commands: {}       # rename dangerous commands
redis_cluster_replicas: 1       # how many replicas for a master in redis cluster ?


#-----------------------------------------------------------------
# DCS (Reference)
#-----------------------------------------------------------------
dcs_registry: consul          # where to register services: none | consul | etcd | both

#-----------------------------------------------------------------
# INTERNAL
#-----------------------------------------------------------------
redis_exists: false               # (INTERNAL) flag to indicate redis exists
...