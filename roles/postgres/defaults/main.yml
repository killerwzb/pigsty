---
#-----------------------------------------------------------------
# PG_IDENTITY
#-----------------------------------------------------------------
# pg_cluster:                     # <CLUSTER>  <REQUIRED>  : pgsql cluster name
# pg_role: replica                # <INSTANCE> <REQUIRED>  : pg role : primary, replica, offline
# pg_seq: 0                       # <INSTANCE> <REQUIRED>  : instance seq number
# pg_instances: {}                # <INSTANCE>             : define multiple pg instances on node, used by monly & gpsql
# pg_upstream:                    # <INSTANCE>             : replication upstream ip addr

# pg_shard:                       # <CLUSTER>              : pgsql shard name
# pg_sindex: 0                    # <CLUSTER>              : pgsql shard index
# gp_role: master                 # <CLUSTER>              : gpsql role, master or segment

pg_offline_query: false          # <INSTANCE> [FLAG] set to true to enable offline query on this instance (instance level)
pg_backup: false                 # <INSTANCE> [FLAG] store base backup on this node (instance level, reserved)
pg_weight: 100                   # <INSTANCE> [FLAG] default load balance weight (instance level)
pg_hostname: true                # [FLAG] reuse postgres identity name as node identity?
pg_preflight_skip: false         # [FLAG] skip preflight identity check

#-----------------------------------------------------------------
# PG_BUSINESS
#-----------------------------------------------------------------
pg_users: []                     # business users
pg_databases: []                 # business databases
pg_services_extra: []            # extra services
pg_hba_rules_extra: []           # extra hba rules
pgbouncer_hba_rules_extra: []    # extra pgbouncer hba rules

# WARNING: change these in production environment!
pg_admin_username: dbuser_dba
pg_admin_password: DBUser.DBA
pg_monitor_username: dbuser_monitor
pg_monitor_password: DBUser.Monitor
pg_replication_username: replicator
pg_replication_password: DBUser.Replicator

#-----------------------------------------------------------------
# PG_INSTALL
#-----------------------------------------------------------------
pg_dbsu: postgres                # os user for database, postgres by default (unwise to change it)
pg_dbsu_uid: 26                  # os dbsu uid and gid, 26 for default postgres users and groups
pg_dbsu_sudo: limit              # dbsu sudo privilege: none|limit|all|nopass, limit by default
pg_dbsu_home: /var/lib/pgsql     # postgresql home directory
pg_dbsu_ssh_exchange: true       # exchange postgres dbsu ssh key among same cluster ?
pg_version: 14                   # default postgresql version to be installed
pgdg_repo: false                 # add pgdg official repo before install (in case of no local repo available)
pg_add_repo: false               # add postgres relate repo before install ?
pg_bin_dir: /usr/pgsql/bin       # postgres binary dir, default is /usr/pgsql/bin, which use /usr/pgsql -> /usr/pgsql-{ver}
pg_packages:                     # postgresql related packages. `${pg_version} will be replaced by `pg_version`
  - postgresql${pg_version}*     # postgresql kernel packages
  - postgis32_${pg_version}*     # postgis
  - citus_${pg_version}*         # citus
  - timescaledb-2-postgresql-${pg_version}    # timescaledb
  - pgbouncer pg_exporter pgbadger pg_activity node_exporter consul haproxy vip-manager
  - patroni patroni-consul patroni-etcd python3 python3-psycopg2 python36-requests python3-etcd
  - python3-consul python36-urllib3 python36-idna python36-pyOpenSSL python36-cryptography
pg_extensions:                   # postgresql extensions, `${pg_version} will be replaced by actual `pg_version`
  - pg_repack_${pg_version} pg_qualstats_${pg_version} pg_stat_kcache_${pg_version} pg_stat_monitor_${pg_version} wal2json_${pg_version}
  # - ogr_fdw${pg_version} mysql_fdw_${pg_version} redis_fdw_${pg_version} mongo_fdw${pg_version} hdfs_fdw_${pg_version}
  # - count_distinct${version}  ddlx_${version}  geoip${version}  orafce${version}
  # - hypopg_${version}  ip4r${version}  jsquery_${version}  logerrors_${version}  periods_${version}  pg_auto_failover_${version}  pg_catcheck${version}
  # - pg_fkpart${version}  pg_jobmon${version}  pg_partman${version}  pg_prioritize_${version}  pg_track_settings${version}  pgaudit15_${version}
  # - pgcryptokey${version}  pgexportdoc${version}  pgimportdoc${version}  pgmemcache-${version}  pgmp${version}  pgq-${version}  pgquarrel pgrouting_${version}
  # - pguint${version}  pguri${version}  prefix${version}   safeupdate_${version}  semver${version}   table_version${version}  tdigest${version}


#-----------------------------------------------------------------
# PG_BOOTSTRAP
#-----------------------------------------------------------------
pg_safeguard: false               # true will disable pg_clean at all, even for pgsql-remove.yml
pg_clean: false                   # true will clean running postgres during pgsql init (DANGEROUS)
pg_data: /pg/data                # postgres data directory (soft link)
pg_fs_main: /data                # primary data disk mount point   /pg   -> {{ pg_fs_main }}/postgres/{{ pg_instance }}
pg_fs_bkup: /data/backups        # backup disk mount point         /pg/* -> {{ pg_fs_bkup }}/postgres/{{ pg_instance }}/*
pg_dummy_filesize: 64MiB         # /pg/dummy hold some disk space for emergency use
pg_listen: '0.0.0.0'             # postgres listen address, '0.0.0.0' (all ipv4 addr) by default
pg_port: 5432                    # postgres port, 5432 by default
pg_localhost: /var/run/postgresql # localhost unix socket dir for connection
patroni_enabled: true            # if not enabled, no postgres cluster will be created
patroni_mode: default            # pause|default|remove
pg_namespace: /pg                # top level key namespace in dcs
patroni_port: 8008               # default patroni port
patroni_watchdog_mode: automatic # watchdog mode: off|automatic|required
pg_conf: tiny.yml                # pgsql template:  {oltp|olap|crit|tiny}.yml
pg_libs: 'pg_stat_statements, auto_explain'  # extensions to be loaded
pg_encoding: UTF8                # database cluster encoding, UTF8 by default
pg_locale: C                     # database cluster local, C by default
pg_lc_collate: C                 # database cluster collate, C by default
pg_lc_ctype: en_US.UTF8          # database character type, en_US.UTF8 by default (for i18n full-text search)
pgbouncer_enabled: true          # if not enabled, pgbouncer will not be created
pgbouncer_port: 6432             # pgbouncer port, 6432 by default
pgbouncer_poolmode: transaction  # pooling mode: session|transaction|statement, transaction pooling by default
pgbouncer_max_db_conn: 100       # max connection to single database, DO NOT set this larger than postgres max conn or db connlimit

#-----------------------------------------------------------------
# PG_PROVISION
#-----------------------------------------------------------------
pg_provision: true               # whether provisioning postgres cluster
pg_init: pg-init                 # init script for cluster template
pg_default_roles:
  - { name: dbrole_readonly  , login: false , comment: role for global read-only access  }                            # production read-only role
  - { name: dbrole_readwrite , login: false , roles: [dbrole_readonly], comment: role for global read-write access }  # production read-write role
  - { name: dbrole_offline , login: false , comment: role for restricted read-only access (offline instance) }        # restricted-read-only role
  - { name: dbrole_admin , login: false , roles: [pg_monitor, dbrole_readwrite] , comment: role for object creation }  # production DDL change role
  - { name: postgres , superuser: true , comment: system superuser }                             # system dbsu, name is designated by `pg_dbsu`
  - { name: dbuser_dba , superuser: true , roles: [dbrole_admin] , comment: system admin user }  # admin dbsu, name is designated by `pg_admin_username`
  - { name: replicator , replication: true , bypassrls: true , roles: [pg_monitor, dbrole_readonly] , comment: system replicator }                   # replicator
  - { name: dbuser_monitor , roles: [pg_monitor, dbrole_readonly] , comment: system monitor user , parameters: {log_min_duration_statement: 1000 } } # monitor user
  - { name: dbuser_stats , password: DBUser.Stats , roles: [dbrole_offline] , comment: business offline user for offline queries and ETL }           # ETL user
pg_default_privileges:           # - privileges - #
  - GRANT USAGE                         ON SCHEMAS   TO dbrole_readonly
  - GRANT SELECT                        ON TABLES    TO dbrole_readonly
  - GRANT SELECT                        ON SEQUENCES TO dbrole_readonly
  - GRANT EXECUTE                       ON FUNCTIONS TO dbrole_readonly
  - GRANT USAGE                         ON SCHEMAS   TO dbrole_offline
  - GRANT SELECT                        ON TABLES    TO dbrole_offline
  - GRANT SELECT                        ON SEQUENCES TO dbrole_offline
  - GRANT EXECUTE                       ON FUNCTIONS TO dbrole_offline
  - GRANT INSERT, UPDATE, DELETE        ON TABLES    TO dbrole_readwrite
  - GRANT USAGE, UPDATE                 ON SEQUENCES TO dbrole_readwrite
  - GRANT TRUNCATE, REFERENCES, TRIGGER ON TABLES    TO dbrole_admin
  - GRANT CREATE                        ON SCHEMAS   TO dbrole_admin
pg_default_schemas: [ monitor ]  # default schemas to be created
pg_default_extensions:           # default extensions to be created
  - { name: 'pg_stat_statements', schema: 'monitor' }
  - { name: 'pgstattuple',        schema: 'monitor' }
  - { name: 'pg_qualstats',       schema: 'monitor' }
  - { name: 'pg_buffercache',     schema: 'monitor' }
  - { name: 'pageinspect',        schema: 'monitor' }
  - { name: 'pg_prewarm',         schema: 'monitor' }
  - { name: 'pg_visibility',      schema: 'monitor' }
  - { name: 'pg_freespacemap',    schema: 'monitor' }
  - { name: 'pg_repack',          schema: 'monitor' }
  - name: postgres_fdw
  - name: file_fdw
  - name: btree_gist
  - name: btree_gin
  - name: pg_trgm
  - name: intagg
  - name: intarray

pg_reload: true                  # reload postgres after hba changes
pg_hba_rules:                    # postgres host-based authentication rules
  - title: allow meta node password access
    role: common
    rules:
      - host    all     all                         10.10.10.10/32      md5
  - title: allow intranet admin password access
    role: common
    rules:
      - host    all     +dbrole_admin               10.0.0.0/8          md5
      - host    all     +dbrole_admin               172.16.0.0/12       md5
      - host    all     +dbrole_admin               192.168.0.0/16      md5
  - title: allow intranet password access
    role: common
    rules:
      - host    all             all                 10.0.0.0/8          md5
      - host    all             all                 172.16.0.0/12       md5
      - host    all             all                 192.168.0.0/16      md5
  - title: allow local read/write (local production user via pgbouncer)
    role: common
    rules:
      - local   all     +dbrole_readonly                                md5
      - host    all     +dbrole_readonly           127.0.0.1/32         md5
  - title: allow offline query (ETL,SAGA,Interactive) on offline instance
    role: offline
    rules:
      - host    all     +dbrole_offline               10.0.0.0/8        md5
      - host    all     +dbrole_offline               172.16.0.0/12     md5
      - host    all     +dbrole_offline               192.168.0.0/16    md5
pgbouncer_hba_rules:             # pgbouncer host-based authentication rules
  - title: local password access
    role: common
    rules:
      - local  all          all                                     md5
      - host   all          all                     127.0.0.1/32    md5

  - title: intranet password access
    role: common
    rules:
      - host   all          all                     10.0.0.0/8      md5
      - host   all          all                     172.16.0.0/12   md5
      - host   all          all                     192.168.0.0/16  md5



#-----------------------------------------------------------------
# DCS (Reference)
#-----------------------------------------------------------------
dcs_registry: consul              # where to register services: none | consul | etcd | both
dcs_type: consul                  # consul | etcd | both

#-----------------------------------------------------------------
# INTERNAL FLAG
#-----------------------------------------------------------------
pg_exists: false
...